// This file is auto-generated by @hey-api/openapi-ts

export type Body_login_login_access_token = {
  grant_type?: string | null
  username: string
  password: string
  scope?: string
  client_id?: string | null
  client_secret?: string | null
}

export type HTTPValidationError = {
  detail?: Array<ValidationError>
}

export type ItemCreate = {
  title: string
  description?: string | null
}

export type ItemPublic = {
  title: string
  description?: string | null
  id: string
  owner_id: string
}

export type ItemsPublic = {
  data: Array<ItemPublic>
  count: number
}

export type ItemUpdate = {
  title?: string | null
  description?: string | null
}

export type Message = {
  message: string
}

export type NewPassword = {
  token: string
  new_password: string
}

export type Token = {
  access_token: string
  token_type?: string
}

export type UpdatePassword = {
  current_password: string
  new_password: string
}

export type UserCreate = {
  email: string
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  password: string
}

export type UserPublic = {
  email: string
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  id: string
}

export type UserRegister = {
  email: string
  password: string
  full_name?: string | null
}

export type UsersPublic = {
  data: Array<UserPublic>
  count: number
}

export type UserUpdate = {
  email?: string | null
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  password?: string | null
}

export type UserUpdateMe = {
  full_name?: string | null
  email?: string | null
}

export type ValidationError = {
  loc: Array<string | number>
  msg: string
  type: string
}

export type ItemsReadItemsData = {
  limit?: number
  skip?: number
}

export type ItemsReadItemsResponse = ItemsPublic

export type ItemsCreateItemData = {
  requestBody: ItemCreate
}

export type ItemsCreateItemResponse = ItemPublic

export type ItemsReadItemData = {
  id: string
}

export type ItemsReadItemResponse = ItemPublic

export type ItemsUpdateItemData = {
  id: string
  requestBody: ItemUpdate
}

export type ItemsUpdateItemResponse = ItemPublic

export type ItemsDeleteItemData = {
  id: string
}

export type ItemsDeleteItemResponse = Message

export type LoginLoginAccessTokenData = {
  formData: Body_login_login_access_token
}

export type LoginLoginAccessTokenResponse = Token

export type LoginTestTokenResponse = UserPublic

export type LoginRecoverPasswordData = {
  email: string
}

export type LoginRecoverPasswordResponse = Message

export type LoginResetPasswordData = {
  requestBody: NewPassword
}

export type LoginResetPasswordResponse = Message

export type LoginRecoverPasswordHtmlContentData = {
  email: string
}

export type LoginRecoverPasswordHtmlContentResponse = string

export type UsersReadUsersData = {
  limit?: number
  skip?: number
}

export type UsersReadUsersResponse = UsersPublic

export type UsersCreateUserData = {
  requestBody: UserCreate
}

export type UsersCreateUserResponse = UserPublic

export type UsersReadUserMeResponse = UserPublic

export type UsersDeleteUserMeResponse = Message

export type UsersUpdateUserMeData = {
  requestBody: UserUpdateMe
}

export type UsersUpdateUserMeResponse = UserPublic

export type UsersUpdatePasswordMeData = {
  requestBody: UpdatePassword
}

export type UsersUpdatePasswordMeResponse = Message

export type UsersRegisterUserData = {
  requestBody: UserRegister
}

export type UsersRegisterUserResponse = UserPublic

export type UsersReadUserByIdData = {
  userId: string
}

export type UsersReadUserByIdResponse = UserPublic

export type UsersUpdateUserData = {
  requestBody: UserUpdate
  userId: string
}

export type UsersUpdateUserResponse = UserPublic

export type UsersDeleteUserData = {
  userId: string
}

export type UsersDeleteUserResponse = Message

export type UtilsTestEmailData = {
  emailTo: string
}

export type UtilsTestEmailResponse = Message

export type UtilsHealthCheckResponse = boolean


export interface Account {
  id: number;
  name: string;
  type: string;
  balance: number;
  createdAt: string;
  updatedAt: string;
}

export interface CreateAccountRequest {
  name: string;
  type: string;
}

export interface UpdateAccountRequest {
  name?: string;
  type?: string;
}

export interface AccountPublic {
  id: string
  acnt_name: string
  cano: string
  acnt_prdt_cd: string
  acnt_type: string
  hts_id: string
  is_active: boolean
  owner_id: string
  owner_name: string
  created_at: string
  updated_at: string
  kis_access_token: string
  app_key: string
  app_secret: string
  discord_webhook_url?: string
  api_config?: AccountAPIConfigPublic
}

export interface AccountAPIConfigPublic {
  id: string
  app_key: string
  app_secret: string
  discord_webhook_url?: string
  account_id: string
  created_at: string
  updated_at: string
}

export interface AccountCreate {
  acnt_name: string
  cano: string
  acnt_prdt_cd: string
  acnt_type: string
  hts_id: string
  is_active: boolean
  app_key: string
  app_secret: string
  discord_webhook_url?: string
}

export interface AccountUpdate {
  acnt_name?: string
  cano?: string
  acnt_prdt_cd?: string
  acnt_type?: string
  hts_id?: string
  is_active?: boolean
  app_key?: string
  app_secret?: string
  discord_webhook_url?: string
}

export interface AccountsPublic {
  data: Array<AccountPublic>
  count: number
}

export interface AccountsReadAccountsData {
  limit?: number
  skip?: number
}

export type AccountsReadAccountsResponse = AccountsPublic

export interface AccountsCreateAccountData {
  requestBody: AccountCreate
}

export type AccountsCreateAccountResponse = AccountPublic

export interface AccountsReadAccountData {
  account_id: string
}

export type AccountsReadAccountResponse = AccountPublic

export interface AccountsUpdateAccountData {
  account_id: string
  requestBody: AccountUpdate
}

export type AccountsUpdateAccountResponse = AccountPublic

export interface AccountsDeleteAccountData {
  account_id: string
}

export type AccountsDeleteAccountResponse = Message

export interface PortfolioItem {
  name: string
  tags: string[]
  returnRate: string
  status?: string
  accountId: string
  accessTokenExpired: boolean
  tokenExpiryTime?: string
  totalAssets?: string
  availableCash?: string
  depositBalance?: string
  d2DepositBalance?: string
  evaluationAmount?: string
  purchaseAmount?: string
  evaluationProfitLoss?: string
  profitLossRate?: string
  holdings?: {
    name: string
    code: string
    returnRate: string
    trend: "up" | "down"
  }[]
}

export interface MinutelyBalance {
  id: string
  account_id: string
  timestamp: string
  total_assets: number
  available_cash: number
  deposit_balance: number
  d2_deposit_balance: number
  evaluation_amount: number
  purchase_amount: number
  evaluation_profit_loss: number
  profit_loss_rate: number
  created_at: string
  updated_at: string
}

export interface AccountsReadMinutelyBalancesData {
  account_id: string
  start_time?: string
  end_time?: string
}

export type AccountsReadMinutelyBalancesResponse = MinutelyBalance[]
